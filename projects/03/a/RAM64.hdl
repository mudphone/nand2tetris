// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=c0, b=c1, c=c2, d=c3, e=c4, f=c5, g=c6, h=c7);

    RAM8(in=in, load=c0, address=address[3..5], out=r0);
    RAM8(in=in, load=c1, address=address[3..5], out=r1);
    RAM8(in=in, load=c2, address=address[3..5], out=r2);
    RAM8(in=in, load=c3, address=address[3..5], out=r3);
    RAM8(in=in, load=c4, address=address[3..5], out=r4);
    RAM8(in=in, load=c5, address=address[3..5], out=r5);
    RAM8(in=in, load=c6, address=address[3..5], out=r6);
    RAM8(in=in, load=c7, address=address[3..5], out=r7);

    Mux8Way16(a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7, sel=address[0..2], out=out);
}
